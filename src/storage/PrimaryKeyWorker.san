// -*- mode: Java; -*-
package sanka.rest.storage;
import sanka.rest.RestWorker;
import sanka.rest.RestOperation;
import sanka.util.Random;

serializable class PrimaryKeyPostState {
    String key;
}

/**
 * Use this worker to generate an identifier which is likely to be unique
 * over the lifetime of this instance of this server.
 */
class PrimaryKeyWorker extends RestWorker {
    const WORKER_PATH = "/primary-key";
    const THIRTY_TWO = "abcdefghijklmnopqrstuvwxyz234567";

    private boolean have_bits;
    private int bits;

    void onGet(RestOperation op) {
        var id = Random.randomUInt();
        var data = new byte[](8);
        for (var y = 0; y < 6; y++) {
            var value = id & 31;
            data[y] = THIRTY_TWO[value];
            id = id >> 5;
        }
        if (!this.have_bits) {
            this.bits = Random.randomUInt();
        }
        data[6] = THIRTY_TWO[this.bits & 31];
        this.bits = this.bits >> 5;
        data[7] = THIRTY_TWO[this.bits & 31];
        this.bits = this.bits >> 5;
        this.have_bits = !this.have_bits;

        var postState = new PrimaryKeyPostState();
        postState.key = new String(data);
        op.setBody(postState);
    }
}
