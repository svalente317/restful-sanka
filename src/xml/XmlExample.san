// -*- mode: Java; -*-
package sanka.xml;
import sanka.io.FileReader;

/**
 * This class is an example of how to use XmlParser and XmlProcessor
 * which use the "expat" C library to parse XML.
 *
 * It's a little tricky to build this. See the Makefile.
 *
 * ExampleProcessor outputs the XML tags with indentation for nested tags.
 */
class ExampleProcessor {
    private int level;

    void startElement(String tag, String[] attrs) {
        var s = "";
        for (var idx = 0; idx < this.level; idx++) {
            s = s + "  ";
        }
        s = s + tag + " (";
        var attrMap = new String[class String];
        for (var idx = 0; idx < attrs.length; idx++) {
            attrMap[attrs[idx]] = attrs[idx+1];
            idx++;
        }
        var comma = "";
        for (var key, value : attrMap) {
            s = s + comma + key;
            comma = ", ";
        }
        s = s + ")";
        System.println(s);
        this.level++;
    }
    
    void handleData(String data) {
    }

    void endElement(String tag) {
        this.level--;
    }
}

/**
 * Usage: xml_example filename.xml
 */
class XmlExample {
    static void main(String[] argv) {
        var filename = argv[1];
        var reader = new FileReader();
        var status = reader.open(filename);
        if (status != 0) {
            System.println(filename + ": " + System.strerror(status));
            return;
        }
        var parser = new XmlParser();
        var processor = new ExampleProcessor();
        parser.parse(reader, null, processor);
        reader.close();
    }
}
