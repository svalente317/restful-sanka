// -*- mode: Java; -*-
package sanka.sqlite3;
import sanka.json.JsonElement;
import sanka.json.JsonObject;

/**
 * JsonTable fields can have the following types:
 *
 * JsonElement.BOOLEAN_TYPE. stored as an int in the db.
 * JsonElement.INT_TYPE.
 * JsonElement.DOUBLE_TYPE.
 * JsonElement.STRING_TYPE. variable length. no max.
 * JsonElement.ARRAY_TYPE.
 *
 * Unfortunately, for ARRAY_TYPE, we only support integer arrays.
 * The data is converted to a string and stored in a text field in the db,
 * and then converted back to an int array when read from the database.
 */
class FieldDesc {
    String name;
    int type;

    FieldDesc(String name, int type) {
        this.name = name;
        this.type = type;
    }
}

class JsonTable {
    String tableName;
    String primaryKey;
    boolean autoincrement;
    FieldDesc[] schema;

    /**
     * Define a schema for converting between Json data and Table data.
     */
    JsonTable(String tableName, String primaryKey, boolean autoincrement,
              FieldDesc[] schema) {
        this.tableName = tableName;
        this.primaryKey = primaryKey;
        this.autoincrement = autoincrement;
        this.schema = schema;
    }

    /**
     * @return field type from schema
     */
    int getFieldType(String name) {
        for (var field : this.schema) {
            if (field.name == name) {
                return field.type;
            }
        }
        return 0;
    }
}

