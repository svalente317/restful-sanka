// -*- mode: Java; -*-
package sanka.rest;
import sanka.http.Http;
import sanka.http.Query;
import sanka.json.Serializable;
import sanka.rest.RestOperation;
import sanka.rest.RestProcessor;
import sanka.rest.storage.StorageLogWorker;
import sanka.rest.storage.StorageReceiverWorker;
import sanka.rest.storage.StorageSenderWorker;
import sanka.rest.storage.StorageWorker;
import sanka.test.BaseTest;

abstract class BaseRestTest extends BaseTest {

    void registerStorageWorkers(RestProcessor processor) {
        processor.register(StorageLogWorker.WORKER_PATH,
                           new StorageLogWorker());
        processor.register(StorageWorker.WORKER_PATH,
                           new StorageWorker());
        processor.register(StorageReceiverWorker.WORKER_PATH,
                           new StorageReceiverWorker());
        processor.register(StorageSenderWorker.WORKER_PATH,
                           new StorageSenderWorker());
    }

    RestOperation send(RestProcessor processor, String method, String path,
                       Serializable body) {
        var op = new RestOperation();
        op.method = method;
        op.path = path;
        op.setBody(body);
        op.status = Http.OK;
        processor.processOperation(op);
        return op;
    }

    RestOperation sendQuery(RestProcessor processor, String path,
                            Query query) {
        var op = new RestOperation();
        op.method = Http.GET;
        op.path = path;
        op.query = query;
        op.status = Http.OK;
        processor.processOperation(op);
        return op;
    }
}
